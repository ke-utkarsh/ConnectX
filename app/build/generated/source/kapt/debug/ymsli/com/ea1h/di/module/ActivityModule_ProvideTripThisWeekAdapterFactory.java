// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import ymsli.com.ea1h.adapters.TripThisWeekAdapter;

public final class ActivityModule_ProvideTripThisWeekAdapterFactory
    implements Factory<TripThisWeekAdapter> {
  private final ActivityModule module;

  public ActivityModule_ProvideTripThisWeekAdapterFactory(ActivityModule module) {
    this.module = module;
  }

  @Override
  public TripThisWeekAdapter get() {
    return proxyProvideTripThisWeekAdapter(module);
  }

  public static ActivityModule_ProvideTripThisWeekAdapterFactory create(ActivityModule module) {
    return new ActivityModule_ProvideTripThisWeekAdapterFactory(module);
  }

  public static TripThisWeekAdapter proxyProvideTripThisWeekAdapter(ActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideTripThisWeekAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
