// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h.base;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class FilterFragment_MembersInjector<VM extends BaseViewModel>
    implements MembersInjector<FilterFragment<VM>> {
  private final Provider<VM> viewModelProvider;

  public FilterFragment_MembersInjector(Provider<VM> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static <VM extends BaseViewModel> MembersInjector<FilterFragment<VM>> create(
      Provider<VM> viewModelProvider) {
    return new FilterFragment_MembersInjector<VM>(viewModelProvider);
  }

  @Override
  public void injectMembers(FilterFragment<VM> instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  public static <VM extends BaseViewModel> void injectViewModel(
      FilterFragment<VM> instance, VM viewModel) {
    instance.viewModel = viewModel;
  }
}
