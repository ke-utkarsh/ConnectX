// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h.network.swaggerintegration;

import com.google.gson.Gson;
import dagger.internal.Factory;
import io.swagger.client.apis.BluetoothCommandControllerApi;
import io.swagger.client.apis.ProjectDescriptionDetailsControllerApi;
import javax.inject.Provider;

public final class MiscHandler_Factory implements Factory<MiscHandler> {
  private final Provider<BluetoothCommandControllerApi> btCommandControllerApiProvider;

  private final Provider<ProjectDescriptionDetailsControllerApi>
      pjDescriptionDetailsControllerApiProvider;

  private final Provider<Gson> gsonProvider;

  public MiscHandler_Factory(
      Provider<BluetoothCommandControllerApi> btCommandControllerApiProvider,
      Provider<ProjectDescriptionDetailsControllerApi> pjDescriptionDetailsControllerApiProvider,
      Provider<Gson> gsonProvider) {
    this.btCommandControllerApiProvider = btCommandControllerApiProvider;
    this.pjDescriptionDetailsControllerApiProvider = pjDescriptionDetailsControllerApiProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public MiscHandler get() {
    return new MiscHandler(
        btCommandControllerApiProvider.get(),
        pjDescriptionDetailsControllerApiProvider.get(),
        gsonProvider.get());
  }

  public static MiscHandler_Factory create(
      Provider<BluetoothCommandControllerApi> btCommandControllerApiProvider,
      Provider<ProjectDescriptionDetailsControllerApi> pjDescriptionDetailsControllerApiProvider,
      Provider<Gson> gsonProvider) {
    return new MiscHandler_Factory(
        btCommandControllerApiProvider, pjDescriptionDetailsControllerApiProvider, gsonProvider);
  }

  public static MiscHandler newMiscHandler(
      BluetoothCommandControllerApi btCommandControllerApi,
      ProjectDescriptionDetailsControllerApi pjDescriptionDetailsControllerApi,
      Gson gson) {
    return new MiscHandler(btCommandControllerApi, pjDescriptionDetailsControllerApi, gson);
  }
}
