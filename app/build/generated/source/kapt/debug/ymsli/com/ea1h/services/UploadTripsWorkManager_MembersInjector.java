// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h.services;

import dagger.MembersInjector;
import io.reactivex.disposables.CompositeDisposable;
import javax.inject.Provider;
import ymsli.com.ea1h.EA1HRepository;
import ymsli.com.ea1h.base.BaseWorkManager_MembersInjector;
import ymsli.com.ea1h.utils.rx.SchedulerProvider;

public final class UploadTripsWorkManager_MembersInjector
    implements MembersInjector<UploadTripsWorkManager> {
  private final Provider<EA1HRepository> eA1HRepositoryProvider;

  private final Provider<CompositeDisposable> compositeDisposableProvider;

  private final Provider<SchedulerProvider> schedulerProvider;

  public UploadTripsWorkManager_MembersInjector(
      Provider<EA1HRepository> eA1HRepositoryProvider,
      Provider<CompositeDisposable> compositeDisposableProvider,
      Provider<SchedulerProvider> schedulerProvider) {
    this.eA1HRepositoryProvider = eA1HRepositoryProvider;
    this.compositeDisposableProvider = compositeDisposableProvider;
    this.schedulerProvider = schedulerProvider;
  }

  public static MembersInjector<UploadTripsWorkManager> create(
      Provider<EA1HRepository> eA1HRepositoryProvider,
      Provider<CompositeDisposable> compositeDisposableProvider,
      Provider<SchedulerProvider> schedulerProvider) {
    return new UploadTripsWorkManager_MembersInjector(
        eA1HRepositoryProvider, compositeDisposableProvider, schedulerProvider);
  }

  @Override
  public void injectMembers(UploadTripsWorkManager instance) {
    BaseWorkManager_MembersInjector.injectEA1HRepository(instance, eA1HRepositoryProvider.get());
    BaseWorkManager_MembersInjector.injectCompositeDisposable(
        instance, compositeDisposableProvider.get());
    BaseWorkManager_MembersInjector.injectSchedulerProvider(instance, schedulerProvider.get());
  }
}
