// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h;

import dagger.internal.Factory;
import javax.inject.Provider;
import ymsli.com.ea1h.database.EA1HDatabase;
import ymsli.com.ea1h.database.EA1HSharedPreferences;
import ymsli.com.ea1h.network.NetworkService;
import ymsli.com.ea1h.network.swaggerintegration.MiscHandler;
import ymsli.com.ea1h.network.swaggerintegration.TripHandler;
import ymsli.com.ea1h.network.swaggerintegration.UserRegistration;
import ymsli.com.ea1h.network.swaggerintegration.VehicleRegistration;

public final class EA1HRepository_Factory implements Factory<EA1HRepository> {
  private final Provider<EA1HDatabase> ea1hDatabaseProvider;

  private final Provider<UserRegistration> userRegistrationProvider;

  private final Provider<VehicleRegistration> vehicleRegistrationProvider;

  private final Provider<TripHandler> tripHandlerProvider;

  private final Provider<MiscHandler> miscHandlerProvider;

  private final Provider<EA1HSharedPreferences> sharedPreferencesProvider;

  private final Provider<NetworkService> networkServiceProvider;

  public EA1HRepository_Factory(
      Provider<EA1HDatabase> ea1hDatabaseProvider,
      Provider<UserRegistration> userRegistrationProvider,
      Provider<VehicleRegistration> vehicleRegistrationProvider,
      Provider<TripHandler> tripHandlerProvider,
      Provider<MiscHandler> miscHandlerProvider,
      Provider<EA1HSharedPreferences> sharedPreferencesProvider,
      Provider<NetworkService> networkServiceProvider) {
    this.ea1hDatabaseProvider = ea1hDatabaseProvider;
    this.userRegistrationProvider = userRegistrationProvider;
    this.vehicleRegistrationProvider = vehicleRegistrationProvider;
    this.tripHandlerProvider = tripHandlerProvider;
    this.miscHandlerProvider = miscHandlerProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.networkServiceProvider = networkServiceProvider;
  }

  @Override
  public EA1HRepository get() {
    return new EA1HRepository(
        ea1hDatabaseProvider.get(),
        userRegistrationProvider.get(),
        vehicleRegistrationProvider.get(),
        tripHandlerProvider.get(),
        miscHandlerProvider.get(),
        sharedPreferencesProvider.get(),
        networkServiceProvider.get());
  }

  public static EA1HRepository_Factory create(
      Provider<EA1HDatabase> ea1hDatabaseProvider,
      Provider<UserRegistration> userRegistrationProvider,
      Provider<VehicleRegistration> vehicleRegistrationProvider,
      Provider<TripHandler> tripHandlerProvider,
      Provider<MiscHandler> miscHandlerProvider,
      Provider<EA1HSharedPreferences> sharedPreferencesProvider,
      Provider<NetworkService> networkServiceProvider) {
    return new EA1HRepository_Factory(
        ea1hDatabaseProvider,
        userRegistrationProvider,
        vehicleRegistrationProvider,
        tripHandlerProvider,
        miscHandlerProvider,
        sharedPreferencesProvider,
        networkServiceProvider);
  }

  public static EA1HRepository newEA1HRepository(
      EA1HDatabase ea1hDatabase,
      UserRegistration userRegistration,
      VehicleRegistration vehicleRegistration,
      TripHandler tripHandler,
      MiscHandler miscHandler,
      EA1HSharedPreferences sharedPreferences,
      NetworkService networkService) {
    return new EA1HRepository(
        ea1hDatabase,
        userRegistration,
        vehicleRegistration,
        tripHandler,
        miscHandler,
        sharedPreferences,
        networkService);
  }
}
