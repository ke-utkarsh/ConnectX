// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.swagger.client.apis.BikeControllerApi;

public final class ApplicationModule_ProvideBikeControllerApiFactory
    implements Factory<BikeControllerApi> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideBikeControllerApiFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public BikeControllerApi get() {
    return proxyProvideBikeControllerApi(module);
  }

  public static ApplicationModule_ProvideBikeControllerApiFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideBikeControllerApiFactory(module);
  }

  public static BikeControllerApi proxyProvideBikeControllerApi(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideBikeControllerApi(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
