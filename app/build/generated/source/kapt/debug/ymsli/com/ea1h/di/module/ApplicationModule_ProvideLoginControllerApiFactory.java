// Generated by Dagger (https://google.github.io/dagger).
package ymsli.com.ea1h.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.swagger.client.apis.LoginControllerApi;

public final class ApplicationModule_ProvideLoginControllerApiFactory
    implements Factory<LoginControllerApi> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideLoginControllerApiFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public LoginControllerApi get() {
    return proxyProvideLoginControllerApi(module);
  }

  public static ApplicationModule_ProvideLoginControllerApiFactory create(
      ApplicationModule module) {
    return new ApplicationModule_ProvideLoginControllerApiFactory(module);
  }

  public static LoginControllerApi proxyProvideLoginControllerApi(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideLoginControllerApi(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
